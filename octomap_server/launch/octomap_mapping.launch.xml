<!--
  Example launch file for octomap_server mapping:
  Listens to incoming PointCloud2 data and incrementally builds an octomap.
  The data is sent out in different representations.

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details
-->
<!-- TODO: sync this parameter with dynus map_utils' -->
<launch>
	<node pkg="octomap_server" exec="octomap_server_node" name="octomap_server" output="screen">
		<param name="resolution" value="0.2" />

		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<!-- <param name="frame_id" value="odom_combined" /> -->
		<param name="frame_id" value="map" />

		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model.max_range" value="5.0" />

		<!-- data source to integrate (PointCloud2) -->
		<!-- <remap from="cloud_in" to="/narrow_stereo/points_filtered2" /> -->
		<remap from="lidar_cloud_in" to="/mid360_PointCloud2" />
	</node>
</launch>
